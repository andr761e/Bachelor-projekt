# Funktion til at sammenligne modelens success rate med bookmakernes gennemsnitlige sandsynlighed
compare_with_bookmakers <- function(df, pred_col, true_col, diff_col, result_col, result_char, threshold = 0) {
# Filtrer kun r√¶kker, hvor forskellen overstiger threshold
df <- df[df[[diff_col]] > threshold, ]
# Hvis der ikke er r√¶kker, afslut
if (nrow(df) == 0) {
cat("\nIngen r√¶kker opfylder threshold =", threshold, "\n")
return()
}
# T√¶l successer (model korrekt forudsigelse) og total antal
success <- sum(df[[pred_col]] > df[[true_col]] & df[[result_col]] == result_char)
total <- sum(df[[pred_col]] > df[[true_col]])
# Beregn bookmakernes gennemsnitlige sandsynlighed for det specifikke udfald
bookmaker_mean <- mean(df[[true_col]])
# Udskriv success rate og bookmaker gennemsnit
cat("\nThreshold =", threshold, "\n")
cat("Antal r√¶kker:", total, "\n")
cat("Model Success Rate:", success, "/", total, "=", ifelse(total > 0, success/total, NA), "\n")
cat("Bookmakernes Gennemsnitlige Sandsynlighed =", round(bookmaker_mean, 4), "\n")
# One-sample binomial test mod bookmaker gennemsnit
if (total > 0) {
test <- binom.test(success, total, p = bookmaker_mean, alternative = "greater")
print(test)
} else {
cat("Ingen r√¶kker opfylder threshold.\n")
}
}
# üî• Hjemmesejr (H)
cat("\nüìå Hjemmesejr (H)\n")
compare_with_bookmakers(NN, "YpredH", "YtrueH", "%DiffH", "FTR", "H", threshold = 40)
# Indl√¶s biblioteker
library(boot)
library(tidyverse)
library(readxl)
library(stats)
#Indl√¶s alle dataframes
SR <- read_excel("SoftmaxRegressionResultsUnfiltered.xlsx")
KNN <- read_excel("KNNResultsUnfiltered.xlsx")
RF <- read_excel("RandomForestResultsUnfiltered.xlsx")
KNN_RF <- read_excel("KNN_RF_ResultsUnfiltered.xlsx")
NN <- read_excel("NeuralNetworkOutliersResultsUnfiltered.xlsx")
# Funktion til at sammenligne modelens success rate med bookmakernes gennemsnitlige sandsynlighed
compare_with_bookmakers <- function(df, pred_col, true_col, diff_col, result_col, result_char, threshold = 0) {
# Filtrer kun r√¶kker, hvor forskellen overstiger threshold
df <- df[df[[diff_col]] > threshold, ]
# Hvis der ikke er r√¶kker, afslut
if (nrow(df) == 0) {
cat("\nIngen r√¶kker opfylder threshold =", threshold, "\n")
return()
}
# T√¶l successer (model korrekt forudsigelse) og total antal
success <- sum(df[[pred_col]] > df[[true_col]] & df[[result_col]] == result_char)
total <- sum(df[[pred_col]] > df[[true_col]])
# Beregn bookmakernes gennemsnitlige sandsynlighed for det specifikke udfald
bookmaker_mean <- mean(df[[true_col]])
# Udskriv success rate og bookmaker gennemsnit
cat("\nThreshold =", threshold, "\n")
cat("Antal r√¶kker:", total, "\n")
cat("Model Success Rate:", success, "/", total, "=", ifelse(total > 0, success/total, NA), "\n")
cat("Bookmakernes Gennemsnitlige Sandsynlighed =", round(bookmaker_mean, 4), "\n")
# One-sample binomial test mod bookmaker gennemsnit
if (total > 0) {
test <- binom.test(success, total, p = bookmaker_mean, alternative = "greater")
print(test)
} else {
cat("Ingen r√¶kker opfylder threshold.\n")
}
}
# üî• Hjemmesejr (H)
cat("\nüìå Hjemmesejr (H)\n")
compare_with_bookmakers(NN, "YpredH", "YtrueH", "%DiffH", "FTR", "H", threshold = 40)
# ü§ù Uafgjort (D)
cat("\nüìå Uafgjort (D)\n")
compare_with_bookmakers(NN, "YpredD", "YtrueD", "%DiffD", "FTR", "D", threshold = 40)
# üöå Udebanesejr (A)
cat("\nüìå Udebanesejr (A)\n")
compare_with_bookmakers(NN, "YpredA", "YtrueA", "%DiffA", "FTR", "A", threshold = 40)
#df2 <- df[df[["%DiffH"]] > 80, ]
#print(df2, n = Inf)
# Funktion til at sammenligne modelens success rate med bookmakernes gennemsnitlige sandsynlighed
compare_with_bookmakers <- function(df, pred_col, true_col, diff_col, result_col, result_char, threshold = 0) {
# Filtrer kun r√¶kker, hvor forskellen overstiger threshold
df <- df[df[[diff_col]] > threshold, ]
# Hvis der ikke er r√¶kker, afslut
if (nrow(df) == 0) {
cat("\nIngen r√¶kker opfylder threshold =", threshold, "\n")
return()
}
# T√¶l successer (model korrekt forudsigelse) og total antal
success <- sum(df[[pred_col]] > df[[true_col]] & df[[result_col]] == result_char)
total <- sum(df[[pred_col]] > df[[true_col]])
# Beregn bookmakernes gennemsnitlige sandsynlighed for det specifikke udfald
bookmaker_mean <- mean(df[[true_col]])
# Udskriv success rate og bookmaker gennemsnit
cat("\nThreshold =", threshold, "\n")
cat("Antal r√¶kker:", total, "\n")
cat("Model Success Rate:", success, "/", total, "=", ifelse(total > 0, success/total, NA), "\n")
cat("Bookmakernes Gennemsnitlige Sandsynlighed =", round(bookmaker_mean, 4), "\n")
# One-sample binomial test mod bookmaker gennemsnit
if (total > 0) {
test <- binom.test(success, total, p = bookmaker_mean, alternative = "greater")
print(test)
} else {
cat("Ingen r√¶kker opfylder threshold.\n")
}
}
# üî• Hjemmesejr (H)
cat("\nüìå Hjemmesejr (H)\n")
compare_with_bookmakers(NN, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.05)
# ü§ù Uafgjort (D)
cat("\nüìå Uafgjort (D)\n")
compare_with_bookmakers(NN, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.05)
# üöå Udebanesejr (A)
cat("\nüìå Udebanesejr (A)\n")
compare_with_bookmakers(NN, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.05)
# üöå Udebanesejr (A)
cat("\nüìå Udebanesejr (A)\n")
compare_with_bookmakers2(NN, "YpredA", "YtrueA", "DiffA", "FTR", "A", t1 = 0.05, t2=0.1)
# Funktion til at sammenligne modelens success rate med bookmakernes gennemsnitlige sandsynlighed
compare_with_bookmakers <- function(df, pred_col, true_col, diff_col, result_col, result_char, threshold = 0) {
# Filtrer kun r√¶kker, hvor forskellen overstiger threshold
df <- df[df[[diff_col]] > threshold, ]
# Hvis der ikke er r√¶kker, afslut
if (nrow(df) == 0) {
cat("\nIngen r√¶kker opfylder threshold =", threshold, "\n")
return()
}
# T√¶l successer (model korrekt forudsigelse) og total antal
success <- sum(df[[pred_col]] > df[[true_col]] & df[[result_col]] == result_char)
total <- sum(df[[pred_col]] > df[[true_col]])
# Beregn bookmakernes gennemsnitlige sandsynlighed for det specifikke udfald
bookmaker_mean <- mean(df[[true_col]])
# Udskriv success rate og bookmaker gennemsnit
cat("\nThreshold =", threshold, "\n")
cat("Antal r√¶kker:", total, "\n")
cat("Model Success Rate:", success, "/", total, "=", ifelse(total > 0, success/total, NA), "\n")
cat("Bookmakernes Gennemsnitlige Sandsynlighed =", round(bookmaker_mean, 4), "\n")
# One-sample binomial test mod bookmaker gennemsnit
if (total > 0) {
test <- binom.test(success, total, p = bookmaker_mean, alternative = "greater")
print(test)
} else {
cat("Ingen r√¶kker opfylder threshold.\n")
}
}
# üî• Hjemmesejr (H)
cat("\nüìå Hjemmesejr (H)\n")
compare_with_bookmakers(SR, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.05)
# ü§ù Uafgjort (D)
cat("\nüìå Uafgjort (D)\n")
compare_with_bookmakers(SR, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.05)
# üöå Udebanesejr (A)
cat("\nüìå Udebanesejr (A)\n")
compare_with_bookmakers(SR, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.05)
#df2 <- NN[NN[["DiffH"]] > 0.05, ]
#print(df2, n = Inf)
# Funktion til at sammenligne modelens success rate med bookmakernes gennemsnitlige sandsynlighed
compare_with_bookmakers <- function(df, pred_col, true_col, diff_col, result_col, result_char, threshold = 0) {
# Filtrer kun r√¶kker, hvor forskellen overstiger threshold
df <- df[df[[diff_col]] > threshold, ]
# Hvis der ikke er r√¶kker, afslut
if (nrow(df) == 0) {
cat("\nIngen r√¶kker opfylder threshold =", threshold, "\n")
return()
}
# T√¶l successer (model korrekt forudsigelse) og total antal
success <- sum(df[[pred_col]] > df[[true_col]] & df[[result_col]] == result_char)
total <- sum(df[[pred_col]] > df[[true_col]])
# Beregn bookmakernes gennemsnitlige sandsynlighed for det specifikke udfald
bookmaker_mean <- mean(df[[true_col]])
# Udskriv success rate og bookmaker gennemsnit
cat("\nThreshold =", threshold, "\n")
cat("Antal r√¶kker:", total, "\n")
cat("Model Success Rate:", success, "/", total, "=", ifelse(total > 0, success/total, NA), "\n")
cat("Bookmakernes Gennemsnitlige Sandsynlighed =", round(bookmaker_mean, 4), "\n")
# One-sample binomial test mod bookmaker gennemsnit
if (total > 0) {
test <- binom.test(success, total, p = bookmaker_mean, alternative = "greater")
print(test)
} else {
cat("Ingen r√¶kker opfylder threshold.\n")
}
}
# üî• Hjemmesejr (H)
cat("\nüìå Hjemmesejr (H)\n")
compare_with_bookmakers(KNN, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.05)
# ü§ù Uafgjort (D)
cat("\nüìå Uafgjort (D)\n")
compare_with_bookmakers(KNN, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.05)
# üöå Udebanesejr (A)
cat("\nüìå Udebanesejr (A)\n")
compare_with_bookmakers(KNN, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.05)
#df2 <- NN[NN[["DiffH"]] > 0.05, ]
#print(df2, n = Inf)
