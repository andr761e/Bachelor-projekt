# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(XGB, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.05)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(XGB, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.075)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(XGB, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.075)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(XGB, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.075)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(XGB, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.1)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(XGB, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.1)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(XGB, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.1)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(XGB, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.125)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(XGB, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.125)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(XGB, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.125)
#df2 <- NN[NN[["DiffH"]] > 0.05, ]
#print(df2, n = Inf)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(GE, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.025)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(GE, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.025)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(GE, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.025)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(GE, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.05)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(GE, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.05)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(GE, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.05)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(GE, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.075)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(GE, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.075)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(GE, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.075)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(GE, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.1)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(GE, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.1)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(GE, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.1)
# 🔥 Hjemmesejr (H)
cat("\n📌 Hjemmesejr (H)\n")
compare_with_bookmakers(GE, "YpredH", "YtrueH", "DiffH", "FTR", "H", threshold = 0.125)
# 🤝 Uafgjort (D)
cat("\n📌 Uafgjort (D)\n")
compare_with_bookmakers(GE, "YpredD", "YtrueD", "DiffD", "FTR", "D", threshold = 0.125)
# 🚌 Udebanesejr (A)
cat("\n📌 Udebanesejr (A)\n")
compare_with_bookmakers(GE, "YpredA", "YtrueA", "DiffA", "FTR", "A", threshold = 0.125)
#df2 <- NN[NN[["DiffH"]] > 0.05, ]
#print(df2, n = Inf)
# Indlæs biblioteker
library(boot)
library(tidyverse)
library(readxl)
library(stats)
#Indlæs alle dataframes
SR <- read_excel("SoftmaxRegressionResultsUnfiltered.xlsx")
KNN <- read_excel("KNNResultsUnfiltered.xlsx")
RF <- read_excel("RandomForestResultsUnfiltered.xlsx")
KNN_RF <- read_excel("KNN_RF_ResultsUnfiltered.xlsx")
CB <- read_excel("CatBoostResultsUnfiltered.xlsx")
LGBM <- read_excel("LightGBMResultsUnfiltered.xlsx")
XGB <- read_excel("XGBoostResultsUnfiltered.xlsx")
GE <- read_excel("GradientEnsembleResultsUnfiltered.xlsx")
NN <- read_excel("NeuralNetworkOutliersResultsUnfiltered.xlsx")
NN2 <- read_excel("NeuralNetworkOutliersResultsUnfiltered2.xlsx")
#Indlæs alle dataframes
SR <- read_excel("SoftmaxRegressionResultsUnfiltered.xlsx")
KNN <- read_excel("KNNResultsUnfiltered.xlsx")
RF <- read_excel("RandomForestResultsUnfiltered.xlsx")
KNN_RF <- read_excel("KNN_RF_ResultsUnfiltered.xlsx")
CB <- read_excel("CatBoostResultsUnfiltered.xlsx")
LGBM <- read_excel("LightGBMResultsUnfiltered.xlsx")
XGB <- read_excel("XGBoostResultsUnfiltered.xlsx")
GE <- read_excel("GradientEnsembleResultsUnfiltered.xlsx")
NN <- read_excel("NeuralNetworkOutliersResultsUnfiltered.xlsx")
# Monte Carlo-simulering af pure strategy med korrekt sampling af vindere og tabere
monte_carlo_simulation <- function(df, result_char, pred_col, true_col, diff_col,
result_col, threshold = 5, bet_amount = 100,
simulations = 10000) {
# Filtrer kampene, hvor forskellen overstiger threshold
df <- df[df[[diff_col]] >= threshold, ]
# Hvis ingen kampe opfylder threshold, afslut
if (nrow(df) == 0) {
cat("\nIngen kampe opfylder threshold =", threshold, "\n")
return(NULL)
}
# Beregn odds som den inverse af bookmakernes sandsynlighed
df$odds <- 1 / df[[true_col]]
# Vektor til at gemme profitten fra hver simulation
profits <- numeric(simulations)
# Monte Carlo-simulering
for (i in 1:simulations) {
# Random sampling med tilbagelægning
sampled_df <- df[sample(nrow(df), replace = TRUE), ]
# Beregn profit for hver kamp
sampled_df$profit <- ifelse(sampled_df[[result_col]] == result_char,
(sampled_df$odds * bet_amount) - bet_amount,
-bet_amount)
# Summer profitten fra alle kampe i denne simulation
profits[i] <- sum(sampled_df$profit)
}
# Plot histogram over profitfordelingen
hist(profits, breaks = 50, main = paste("Monte Carlo Simulation:", result_char, "Pure Strategy"),
xlab = "Profit (DKK)", col = "gray", border = "black")
# Output af resultater
cat("\nResultat:", result_char, "\n")
cat("Threshold:", threshold, "\n")
cat("Antal kampe opfylder threshold:", nrow(df), "\n")
cat("Gennemsnitlig profit pr. simulation:", mean(profits), "DKK\n")
cat("Median profit pr. simulation:", median(profits), "DKK\n")
cat("Varians af profit pr. simulation:", var(profits), "DKK²\n")
cat("Andel af simulationer med overskud:", mean(profits > 0) * 100, "%\n")
}
# Monte Carlo-simulering af pure strategy med 2 thresholds
monte_carlo_simulation2 <- function(df, result_char, pred_col, true_col, diff_col,
result_col, lower_threshold = 5, upper_threshold = 20,
bet_amount = 100, simulations = 10000) {
# Filtrer kampene, hvor forskellen ligger mellem de to thresholds
df <- df[df[[diff_col]] >= lower_threshold & df[[diff_col]] <= upper_threshold, ]
# Hvis ingen kampe opfylder thresholds, afslut
if (nrow(df) == 0) {
cat("\nIngen kampe opfylder thresholds mellem", lower_threshold, "og", upper_threshold, "\n")
return(NULL)
}
# Beregn odds som den inverse af bookmakernes sandsynlighed
df$odds <- 1 / df[[true_col]]
# Vektor til at gemme profitten fra hver simulation
profits <- numeric(simulations)
# Monte Carlo-simulering
for (i in 1:simulations) {
# Random sampling med tilbagelægning
sampled_df <- df[sample(nrow(df), replace = TRUE), ]
# Beregn profit for hver kamp
sampled_df$profit <- ifelse(sampled_df[[result_col]] == result_char,
(sampled_df$odds * bet_amount) - bet_amount,
-bet_amount)
# Summer profitten fra alle kampe i denne simulation
profits[i] <- sum(sampled_df$profit)
}
# Plot histogram over profitfordelingen
hist(profits, breaks = 50, main = paste("Monte Carlo Simulation:", result_char,
"\nThresholds mellem", lower_threshold, "og", upper_threshold),
xlab = "Profit (DKK)", col = "gray", border = "black")
# Output af resultater
cat("\nResultat:", result_char, "\n")
cat("Thresholds mellem", lower_threshold, "og", upper_threshold, "\n")
cat("Antal kampe opfylder thresholds:", nrow(df), "\n")
cat("Gennemsnitlig profit pr. simulation:", mean(profits), "DKK\n")
cat("Median profit pr. simulation:", median(profits), "DKK\n")
cat("Varians af profit pr. simulation:", var(profits), "DKK²\n")
cat("Andel af simulationer med overskud:", mean(profits > 0) * 100, "%\n")
}
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = NN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = NN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = NN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = NN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = NN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = NN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = NN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = NN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = NN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = NN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = NN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = NN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H) med thresholds 0.05 og 0.07
monte_carlo_simulation2(df = NN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
lower_threshold = 0.05, upper_threshold = 0.07,
bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = SR, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = SR, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = SR, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = SR, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = SR, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = SR, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = SR, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = SR, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = SR, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = SR, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = SR, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = SR, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H) med thresholds 0.05 og 0.07
monte_carlo_simulation2(df = SR, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
lower_threshold = 0.05, upper_threshold = 0.07,
bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H) med thresholds 0.05 og 0.07
monte_carlo_simulation2(df = KNN, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
lower_threshold = 0.05, upper_threshold = 0.07,
bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H) med thresholds 0.05 og 0.07
monte_carlo_simulation2(df = RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
lower_threshold = 0.05, upper_threshold = 0.07,
bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN_RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN_RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN_RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.025, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN_RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN_RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN_RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.05, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN_RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN_RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN_RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.075, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H)
monte_carlo_simulation(df = KNN_RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🤝 Uafgjort (D)
monte_carlo_simulation(df = KNN_RF, result_char = "D",
pred_col = "YpredD", true_col = "YtrueD",
diff_col = "DiffD", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🚌 Udebanesejr (A)
monte_carlo_simulation(df = KNN_RF, result_char = "A",
pred_col = "YpredA", true_col = "YtrueA",
diff_col = "DiffA", result_col = "FTR",
threshold = 0.1, bet_amount = 100, simulations = 10000)
# 🔥 Hjemmesejr (H) med thresholds 0.05 og 0.07
monte_carlo_simulation2(df = KNN_RF, result_char = "H",
pred_col = "YpredH", true_col = "YtrueH",
diff_col = "DiffH", result_col = "FTR",
lower_threshold = 0.05, upper_threshold = 0.07,
bet_amount = 100, simulations = 10000)
